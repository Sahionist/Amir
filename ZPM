#!/usr/bin/env bash
GRE='\033[92m' # Green Light
RD='\033[91m' # Red Light
YLW='\033[93m' # Yellow Light
NC='\033[0m' # White
trap "exit 1" TERM
export TOP_PID=$$
BotH='Self-Bot-X'
function Update_CH {
if ! { sudo apt update && sudo apt upgrade -y echo E: update failed; } | grep -q '^[WE]:'; then
echo success
else
echo failure
exit 1
fi
echo ""
}
function MOREPAK {
rslv
sudo apt install git redis-server lua5.3 liblua5.3-dev lua-lgi libnotify-dev unzip tmux -y 
sudo apt install libconfig++9v5 libstdc++6
sudo apt autoremove
sudo apt install gcc-4.9
sudo apt --yes install wget libconfig9 libjansson4 liblua5.3 make unzip g++ whois fortune fortunes
sudo apt install g++-4.7 -y c++-4.7 -y
sudo apt install libreadline-dev -y libconfig-dev - y libssl-dev -y lua5.3 -y liblua5.3-dev -y libevent-dev -y make unzip git redis-server autoconf g++ -y libjansson-dev -y libpython-dev -y expat libexpat1-dev -y
sudo apt install screen -y
chmod +x WARP.sh
if [ "$?" != "0" ]; then
exit 1
fi
}
function luarocksinstall { 
wget https://luarocks.org/releases/luarocks-3.3.0.tar.gz
tar zxpf luarocks-3.3.0.tar.gz
 cd luarocks-3.3.0
./configure && make && sudo make install
./configure --lua-version=5.3
make build
sudo make install
cd ..
if ["$?" != "0"]; then
exit 1 
fi 
}
function luarocksPACK { 
sudo luarocks install dkjson
sudo luarocks install redis-lua
sudo luarocks install serpent 
sudo luarocks install luasocket
sudo luarocks install lua-sec
sudo luarocks install lua-requests
sudo luarocks install luasocket
if ["$?" != "0"]; then
exit 1 
fi 
}
function KillSelfBot {
kill $(ps aux | grep 'AutoRun' | awk '{print $2}') >> /dev/null 2>&1
echo -e "\n${RD} Self process has been killed !"
}
function search(){
    ps aux | grep -i $1| grep -v grep | awk '{print $2  $12}'
read -p "==> Do you want to kill process??  [y]

==>  for cancel [c]" procid
if  [ "$procid" = 'y' ]
then
kill $(ps aux | grep $1 | awk '{print $2}') >> /dev/null 2>&1

echo -e "\n${RD} process has been killed !"

        
      
fi
if  [ "$procid" = "c" ]; then
exit 0 
fi 
}
function loading {
spin[0]="-"
spin[1]="\\"
spin[2]="|"
spin[3]="/"
PID=$!
echo -n "${spin[0]}"
while [ -d /proc/$PID ]
do
for i in "${spin[@]}"
do
echo -ne "\b$i"
sleep 0.1
done
done
wait $PID
if [ $? -ne 0 ]; then
echo -e "\n${RD}Failed to install !"
kill -s TERM $TOP_PID
else
echo -e "\b${GRE}Done."
fi
}
function Configing() {
    echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n]"  -t 10 CRCO
if [ "$CRCO" = "Y" ];then
echo -e "\e[1m\e[97m==> Please choose the right one"
sleep 3
echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n] "  -t 10 CRCO
fi
if [ "$CRCO" = "y" ]
then
echo -ne "\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\n\e[1m\e[97mInstalling  Packages...  "
MOREPAK >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\n\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
echo -ne "\n\e[1m\e[97mInstalling luarocks .."
luarocksinstall >> /dev/null 2>&1 & loading
echo -ne "\n\e[1m\e[97mInstalling Packages from luarocks .."
luarocksPACK >> /dev/null 2>&1 & loading
fi
if [ -d "$HOME/$BotH" ];then
if [ -f "$HOME/$BotH/CRCO/tdlua.so.zip" ]; then
if [ ! -f "/usr/lib/x86_64-linux-gnu/lua/5.3/tdlua.so" ] ; then
echo -e "\e[1m\e[97m==> Installing TDlua .."

cd $HOME/$BotH/CRCO ; unzip tdlua.so.zip >> /dev/null 2>&1 & loading
sudo mv tdlua.so /usr/lib/x86_64-linux-gnu/lua/5.3/ >> /dev/null 2>&1 & loading
 
echo -e "\e[1m\e[97m==> TDLUA successfully installed "
fi
else
echo -e "\e[1m\e[97m==> TDLUA File already exists"
fi
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. $BotH\e[0m"
else
echo -e "\e[1m\e[97m==> Source not found!,"
fi

}

case $1 in
start)
echo -e "\e[1m\e[36m==> \e[31m ZPM running.. \e[0m"
lua5.3 L-C.lua START_BOT
exit;;
reset)
lua5.3 L-C.lua RESET_BOT
exit;;
killself)
KillSelfBot
exit;;
warp)
echo -e "\e[1m\e[36m==> \e[31m warp starting.. \e[0m"
screen ./WARP.sh
exit;;
login)
lua5.3 L-C.lua LOGIN_BOT
exit;;
config)
lua5.3 L-C.lua CONFIG_BOT
exit;;
search)
search $2
exit;;
install)
Configing
exit;;
esac
exit 0
